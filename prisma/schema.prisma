generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Ipv6CidrBlockAssociation {
  id                    Int     @id @default(autoincrement())
  VpcId                 Int
  AssociationId         String? @db.VarChar(30)
  Ipv6CidrBlock         String? @db.VarChar(30)
  Ipv6CidrBlockState    String? @db.VarChar(30)
  NetworkBorderGroup    String? @db.VarChar(30)
  Ipv6Pool              String? @db.VarChar(30)
  Ipv6CidrBlockStateMsg String? @db.VarChar(30)
  Vpc                   Vpc     @relation(fields: [VpcId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ipv6cidrblockassociation_vpc_id_fk")
}

model Vpc {
  id                       Int                        @unique @default(autoincrement())
  VpcId                    String                     @id @db.VarChar(30)
  DhcpOptionsId            String                     @db.VarChar(30)
  State                    String                     @db.VarChar(10)
  InstanceTenancy          String                     @db.VarChar(10)
  OwnerId                  String                     @db.VarChar(20)
  CidrBlock                String                     @db.VarChar(20)
  IsDefault                Boolean
  TagsKey                  String?                    @db.VarChar(10)
  TagsValue                String?                    @db.VarChar(10)
  NextToken                String?                    @db.VarChar(30)
  CidrBlockAssociation     CidrBlockAssociation?
  Ipv6CidrBlockAssociation Ipv6CidrBlockAssociation[]
}

model Subnet {
  AvailabilityZone            String   @db.VarChar(20)
  AvailabilityZoneId          String   @db.VarChar(20)
  AvailableIpAddressCount     Int?
  CidrBlock                   String   @db.VarChar(30)
  DefaultForAz                Boolean
  MapCustomerOwnedIpOnLaunch  Boolean
  State                       String   @db.VarChar(20)
  SubnetId                    String   @db.VarChar(40)
  VpcId                       String   @db.VarChar(50)
  OwnerId                     String   @db.VarChar(20)
  AssignIpv6AddressOnCreation Boolean
  SubnetArn                   String   @db.VarChar(200)
  EnableDns64                 Boolean
  Ipv6Native                  Boolean
  PrivateDnsOptType           String?  @db.VarChar(20)
  DnsA                        Boolean?
  DnsB                        Boolean?
  id                          Int      @id @unique @default(autoincrement())
  TagsKey                     String?  @db.VarChar(10)
  TagsValue                   String?  @db.VarChar(10)
  MapPublicIpOnLaunch         Boolean
}

model CidrBlockAssociation {
  id                      Int     @id(map: "cidrBlockAssociation_pkey") @default(autoincrement())
  VpcId                   Int     @unique(map: "cidrBlockAssociation_vpcId_key")
  AssociationId           String? @db.VarChar(50)
  CidrBlock               String? @db.VarChar(50)
  CidrBlockState          String? @db.VarChar(50)
  CidrBlockStateStatusMsg String? @db.VarChar(50)
  Vpc                     Vpc     @relation(fields: [VpcId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cidrblockassociation_vpc_id_fk")
}
